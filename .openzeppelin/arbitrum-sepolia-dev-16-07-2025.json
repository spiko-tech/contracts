{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x94e575088F1C2dc5e987b9bd51109587013A1007",
      "txHash": "0xf2fd61d9f6e66efbd4102f3ba48da1b71b1cb4656533b5c3e83ace51ffa43109",
      "kind": "uups"
    },
    {
      "address": "0xb0832d74fE2154889855774115Cc62afBA750e9c",
      "txHash": "0x3b6896436f5af38c361729b5e42fd7b20fe76cad954ba31e6a989cd051b542f0",
      "kind": "uups"
    },
    {
      "address": "0x625a320ED3B3324519320dE7a7c6413bfD5114Fd",
      "txHash": "0x8315bcc2a706e5656439aff9260c2baec7ea21b2806ccb15b005c01a2ac6f6c7",
      "kind": "uups"
    },
    {
      "address": "0x96204e304AB71EE783eac7A9a9b3D0bB655F26C5",
      "txHash": "0xe0e57b1f0d02d48b98a70026341bdec44834a284a794ad6a010b58a2ab68a97f",
      "kind": "uups"
    },
    {
      "address": "0xA6457Bf8A4a6390e9494fa6AfDCbA4762604E999",
      "txHash": "0xf5c79caee37f70401ad124678d21c1ad70159931ec3e37484c4580316be0e134",
      "kind": "uups"
    },
    {
      "address": "0x4E925836cf3f0cd723acFB548DA1a2a3866b0de4",
      "txHash": "0xb2ec0c7ccf9bc153387621875b44d92928eb4a066b93f8b5f41adfbb654d02be",
      "kind": "uups"
    }
  ],
  "impls": {
    "f75238224c8c63cdb6e17dc367da99f90e4dbd2242fdb8b50db117a5d5111411": {
      "address": "0x96626f06ff444D381767039929B285ED2e5cAa3E",
      "txHash": "0x53f730a4fe8ba6dbb8ce42951535636241c8cfea3e6bb5188298c4dd8c4b5c56",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "m_decimals",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Token",
            "src": "contracts/token/Token.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)678_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)247_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)111_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)564_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)601_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "7a52f373958d01c7c90c4542c9a4275614a87f292f21dd866c041335f9142370": {
      "address": "0x96025d35D1326A08f1de21542CfE6c4AcF078A1c",
      "txHash": "0xcf3ea52820d4508ee73cfef0c7abb91a97db51491f601501d82bb82866648892",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "token",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20Metadata)5197",
            "contract": "Oracle",
            "src": "contracts/oracle/Oracle.sol:26"
          },
          {
            "label": "decimals",
            "offset": 20,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Oracle",
            "src": "contracts/oracle/Oracle.sol:28"
          },
          {
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "Oracle",
            "src": "contracts/oracle/Oracle.sol:29"
          },
          {
            "label": "_history",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(Trace208)10164_storage",
            "contract": "Oracle",
            "src": "contracts/oracle/Oracle.sol:30"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)1056_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Checkpoint208)10169_storage)dyn_storage": {
            "label": "struct Checkpoints.Checkpoint208[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Metadata)5197": {
            "label": "contract IERC20Metadata",
            "numberOfBytes": "20"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint208)10169_storage": {
            "label": "struct Checkpoints.Checkpoint208",
            "members": [
              {
                "label": "_key",
                "type": "t_uint48",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint208",
                "offset": 6,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Trace208)10164_storage": {
            "label": "struct Checkpoints.Trace208",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint208)10169_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint208": {
            "label": "uint208",
            "numberOfBytes": "26"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
