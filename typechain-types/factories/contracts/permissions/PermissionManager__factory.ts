/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PermissionManager,
  PermissionManagerInterface,
} from "../../../contracts/permissions/PermissionManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "Masks.Mask",
        name: "permissions",
        type: "bytes32",
      },
      {
        internalType: "Masks.Mask",
        name: "restriction",
        type: "bytes32",
      },
    ],
    name: "MissingPermissions",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "group",
        type: "uint8",
      },
    ],
    name: "GroupAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint8",
        name: "group",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "Masks.Mask",
        name: "admins",
        type: "bytes32",
      },
    ],
    name: "GroupAdmins",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "group",
        type: "uint8",
      },
    ],
    name: "GroupRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "Masks.Mask",
        name: "groups",
        type: "bytes32",
      },
    ],
    name: "Requirements",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADMIN_MASK",
    outputs: [
      {
        internalType: "Masks.Mask",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PUBLIC",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PUBLIC_MASK",
    outputs: [
      {
        internalType: "Masks.Mask",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "group",
        type: "uint8",
      },
    ],
    name: "addGroup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "canCall",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "group",
        type: "uint8",
      },
    ],
    name: "getGroupAdmins",
    outputs: [
      {
        internalType: "Masks.Mask",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getGroups",
    outputs: [
      {
        internalType: "Masks.Mask",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "getRequirements",
    outputs: [
      {
        internalType: "Masks.Mask",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "group",
        type: "uint8",
      },
    ],
    name: "remGroup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "group",
        type: "uint8",
      },
      {
        internalType: "uint8[]",
        name: "admins",
        type: "uint8[]",
      },
    ],
    name: "setGroupAdmins",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes4[]",
        name: "selectors",
        type: "bytes4[]",
      },
      {
        internalType: "uint8[]",
        name: "groups",
        type: "uint8[]",
      },
    ],
    name: "setRequirements",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405230608052600160a052600160ff1b60c05234801561002157600080fd5b5061002a61002f565b6100e1565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161561007f5760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100de5780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b60805160a05160c05161144a6101486000396000818161030801526107540152600081816102d4015281816103e10152818161057c015281816105a8015281816108ca0152610ab2015260008181610a1401528181610a3d0152610bd1015261144a6000f3fe6080604052600436106100fe5760003560e01c8063ac9650d811610095578063bb4b16c511610064578063bb4b16c5146102c2578063bd7818a6146102f6578063c1179a7f1461032a578063c4d66de81461033f578063f14f0a151461035f57600080fd5b8063ac9650d814610207578063ad3cb1cc14610234578063b6cb86dd14610272578063b70096131461029257600080fd5b806352d1902d116100d157806352d1902d1461018457806358d566fa146101a757806370c33af2146101c7578063a0a2cb3e146101e757600080fd5b80630265660b146101035780632a0acc6a146101255780633f5cac21146101515780634f1ef28614610171575b600080fd5b34801561010f57600080fd5b5061012361011e366004610ee3565b61037f565b005b34801561013157600080fd5b5061013a600081565b60405160ff90911681526020015b60405180910390f35b34801561015d57600080fd5b5061012361016c366004610f62565b6103df565b61012361017f366004610ff9565b6104ca565b34801561019057600080fd5b506101996104e9565b604051908152602001610148565b3480156101b357600080fd5b506101236101c2366004610ee3565b610506565b3480156101d357600080fd5b506101996101e23660046110d3565b61054c565b3480156101f357600080fd5b506101236102023660046110fd565b6105a6565b34801561021357600080fd5b50610227610222366004611150565b610646565b60405161014891906111e2565b34801561024057600080fd5b50610265604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516101489190611244565b34801561027e57600080fd5b5061019961028d366004611257565b610739565b34801561029e57600080fd5b506102b26102ad366004611272565b610779565b6040519015158152602001610148565b3480156102ce57600080fd5b506101997f000000000000000000000000000000000000000000000000000000000000000081565b34801561030257600080fd5b506101997f000000000000000000000000000000000000000000000000000000000000000081565b34801561033657600080fd5b5061013a60ff81565b34801561034b57600080fd5b5061012361035a366004611257565b6107a3565b34801561036b57600080fd5b5061019961037a3660046112b5565b6108b5565b610388816108b5565b600061039333610739565b9050818116156103a2565b1590565b156103cf57338183604051637b71c0a960e11b81526004016103c6939291906112d0565b60405180910390fd5b6103d984846108ef565b50505050565b7f0000000000000000000000000000000000000000000000000000000000000000600061040b33610739565b905081811661043357338183604051637b71c0a960e11b81526004016103c6939291906112d0565b600061047185858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061094592505050565b905060005b868110156104bf576104af89898984818110610494576104946112f1565b90506020020160208101906104a99190611307565b8461099f565b6104b881611338565b9050610476565b505050505050505050565b6104d2610a09565b6104db82610ab0565b6104e58282610b09565b5050565b60006104f3610bc6565b506000805160206113f583398151915290565b61050f816108b5565b600061051a33610739565b905081811661054257338183604051637b71c0a960e11b81526004016103c6939291906112d0565b6103d98484610c0f565b6001600160a01b03821660009081526001602090815260408083206001600160e01b0319851684529091528120547f0000000000000000000000000000000000000000000000000000000000000000175b90505b92915050565b7f000000000000000000000000000000000000000000000000000000000000000060006105d233610739565b90508181166105fa57338183604051637b71c0a960e11b81526004016103c6939291906112d0565b61063f8561063a86868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061094592505050565b610c83565b5050505050565b6040805160008152602081019091526060908267ffffffffffffffff81111561067157610671610fe3565b6040519080825280602002602001820160405280156106a457816020015b606081526020019060019003908161068f5790505b50915060005b8381101561073157610701308686848181106106c8576106c86112f1565b90506020028101906106da9190611351565b856040516020016106ed93929190611398565b604051602081830303815290604052610cd6565b838281518110610713576107136112f1565b6020026020010181905250808061072990611338565b9150506106aa565b505092915050565b6001600160a01b0381166000908152602081905260408120547f0000000000000000000000000000000000000000000000000000000000000000176105a0565b600061079861039e61078b858561054c565b61079487610739565b1690565b1590505b9392505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156107e95750825b905060008267ffffffffffffffff1660011480156108065750303b155b905081158015610814575080155b156108325760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561085c57845460ff60401b1916600160401b1785555b6108678660006108ef565b83156108ad57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b60ff81166000908152600260205260408120547f0000000000000000000000000000000000000000000000000000000000000000176105a0565b6001600160a01b0382166000818152602081905260408082208054600160ff871690811b90911790915590519092917f581cf7eb4a9da93789f8c48fb4d2a7790c870cb318015aab14e1162c192a2ec091a35050565b600080805b83518110156109985761098661098185838151811061096b5761096b6112f1565b602002602001015160ff16600160ff9091161b90565b831790565b915061099181611338565b905061094a565b5092915050565b6001600160a01b03831660008181526001602090815260408083206001600160e01b0319871680855290835292819020859055518481529192917fe29ddfc2201d5463b011dea2ca140e5a304057b5704af8ae5ef2e81562812619910160405180910390a3505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610a9057507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a846000805160206113f5833981519152546001600160a01b031690565b6001600160a01b031614155b15610aae5760405163703e46dd60e11b815260040160405180910390fd5b565b7f00000000000000000000000000000000000000000000000000000000000000006000610adc33610739565b9050818116610b0457338183604051637b71c0a960e11b81526004016103c6939291906112d0565b505050565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610b63575060408051601f3d908101601f19168201909252610b60918101906113bf565b60015b610b8b57604051634c9c8ce360e01b81526001600160a01b03831660048201526024016103c6565b6000805160206113f58339815191528114610bbc57604051632a87526960e21b8152600481018290526024016103c6565b610b048383610d4c565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610aae5760405163703e46dd60e11b815260040160405180910390fd5b610c38600160ff83161b6001600160a01b03841660009081526020819052604090205490610da2565b6001600160a01b03831660008181526020819052604080822093909355915160ff8416927faefd37c10ca3ea00fb36b5b9c8b83a1cd873a4f0366a164333cc39b5d56e5e4a91a35050565b60ff821660008181526002602052604090819020839055517fe1fd10fb7b9e92a157d3eee2bbe75f41d0655abad4cfae345060c32ccc0dc74390610cca9084815260200190565b60405180910390a25050565b6060600080846001600160a01b031684604051610cf391906113d8565b600060405180830381855af49150503d8060008114610d2e576040519150601f19603f3d011682016040523d82523d6000602084013e610d33565b606091505b5091509150610d43858383610dad565b95945050505050565b610d5582610e09565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115610d9a57610b048282610cd6565b6104e5610e6e565b60008119831661059d565b606082610dc257610dbd82610e8d565b61079c565b8151158015610dd957506001600160a01b0384163b155b15610e0257604051639996b31560e01b81526001600160a01b03851660048201526024016103c6565b508061079c565b806001600160a01b03163b600003610e3f57604051634c9c8ce360e01b81526001600160a01b03821660048201526024016103c6565b6000805160206113f583398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b3415610aae5760405163b398979f60e01b815260040160405180910390fd5b805115610e9d5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b0381168114610ecd57600080fd5b919050565b803560ff81168114610ecd57600080fd5b60008060408385031215610ef657600080fd5b610eff83610eb6565b9150610f0d60208401610ed2565b90509250929050565b60008083601f840112610f2857600080fd5b50813567ffffffffffffffff811115610f4057600080fd5b6020830191508360208260051b8501011115610f5b57600080fd5b9250929050565b600080600080600060608688031215610f7a57600080fd5b610f8386610eb6565b9450602086013567ffffffffffffffff80821115610fa057600080fd5b610fac89838a01610f16565b90965094506040880135915080821115610fc557600080fd5b50610fd288828901610f16565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561100c57600080fd5b61101583610eb6565b9150602083013567ffffffffffffffff8082111561103257600080fd5b818501915085601f83011261104657600080fd5b81358181111561105857611058610fe3565b604051601f8201601f19908116603f0116810190838211818310171561108057611080610fe3565b8160405282815288602084870101111561109957600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b80356001600160e01b031981168114610ecd57600080fd5b600080604083850312156110e657600080fd5b6110ef83610eb6565b9150610f0d602084016110bb565b60008060006040848603121561111257600080fd5b61111b84610ed2565b9250602084013567ffffffffffffffff81111561113757600080fd5b61114386828701610f16565b9497909650939450505050565b6000806020838503121561116357600080fd5b823567ffffffffffffffff81111561117a57600080fd5b61118685828601610f16565b90969095509350505050565b60005b838110156111ad578181015183820152602001611195565b50506000910152565b600081518084526111ce816020860160208601611192565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561123757603f198886030184526112258583516111b6565b94509285019290850190600101611209565b5092979650505050505050565b60208152600061059d60208301846111b6565b60006020828403121561126957600080fd5b61059d82610eb6565b60008060006060848603121561128757600080fd5b61129084610eb6565b925061129e60208501610eb6565b91506112ac604085016110bb565b90509250925092565b6000602082840312156112c757600080fd5b61059d82610ed2565b6001600160a01b039390931683526020830191909152604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561131957600080fd5b61059d826110bb565b634e487b7160e01b600052601160045260246000fd5b60006001820161134a5761134a611322565b5060010190565b6000808335601e1984360301811261136857600080fd5b83018035915067ffffffffffffffff82111561138357600080fd5b602001915036819003821315610f5b57600080fd5b8284823760008382016000815283516113b5818360208801611192565b0195945050505050565b6000602082840312156113d157600080fd5b5051919050565b600082516113ea818460208701611192565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca26469706673582212200fb022d2d72f475151d4a51a49476f6c74d12459d22b0557711901a825c8729664736f6c63430008150033";

type PermissionManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PermissionManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PermissionManager__factory extends ContractFactory {
  constructor(...args: PermissionManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PermissionManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PermissionManager__factory {
    return super.connect(runner) as PermissionManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PermissionManagerInterface {
    return new Interface(_abi) as PermissionManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PermissionManager {
    return new Contract(address, _abi, runner) as unknown as PermissionManager;
  }
}
