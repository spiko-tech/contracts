/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Oracle, OracleInterface } from "../../../contracts/oracle/Oracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAuthority",
        name: "_authority",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [],
    name: "CheckpointUnorderedInsertion",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "RestrictedAccess",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "bits",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "SafeCastOverflowedUintDowncast",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "SafeCastOverflowedUintToInt",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint48",
        name: "timepoint",
        type: "uint48",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "price",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "round",
        type: "uint256",
      },
    ],
    name: "Update",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint48",
        name: "_timepoint",
        type: "uint48",
      },
    ],
    name: "getHistoricalPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "_roundId",
        type: "uint80",
      },
    ],
    name: "getRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "denomination",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint48",
        name: "timepoint",
        type: "uint48",
      },
      {
        internalType: "uint208",
        name: "price",
        type: "uint208",
      },
    ],
    name: "publishPrice",
    outputs: [
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523060a0523480156200001557600080fd5b50604051620019133803806200191383398101604081905262000038916200010a565b6001600160a01b0381166080526200004f62000056565b506200013c565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000a75760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001075780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6000602082840312156200011d57600080fd5b81516001600160a01b03811681146200013557600080fd5b9392505050565b60805160a05161179c62000177600039600081816108e20152818161090b0152610a5e0152600081816102e50152610b3d015261179c6000f3fe6080604052600436106100e85760003560e01c8063825959991161008a578063ad3cb1cc11610059578063ad3cb1cc146102a2578063bf7e214f146102d3578063fc0c546a1461031f578063feaf968c1461033f57600080fd5b806382595999146101ec5780638e15f4731461020c5780639a6fc8f514610221578063ac9650d81461027557600080fd5b806354fd4d50116100c657806354fd4d501461015d5780635cc181ce146101725780635dfddaef146101925780637284e416146101ca57600080fd5b8063313ce567146100ed5780634f1ef2861461012557806352d1902d1461013a575b600080fd5b3480156100f957600080fd5b5060005461010e90600160a01b900460ff1681565b60405160ff90911681526020015b60405180910390f35b6101386101333660046110aa565b610354565b005b34801561014657600080fd5b5061014f610373565b60405190815260200161011c565b34801561016957600080fd5b5061014f600081565b34801561017e57600080fd5b5061014f61018d366004611158565b610390565b34801561019e57600080fd5b506101b26101ad366004611173565b6103b4565b6040516001600160501b03909116815260200161011c565b3480156101d657600080fd5b506101df61045a565b60405161011c9190611206565b3480156101f857600080fd5b50610138610207366004611219565b6104e8565b34801561021857600080fd5b5061014f6106ac565b34801561022d57600080fd5b5061024161023c3660046112b1565b6106c0565b604080516001600160501b03968716815260208101959095528401929092526060830152909116608082015260a00161011c565b34801561028157600080fd5b506102956102903660046112da565b6107b0565b60405161011c919061134f565b3480156102ae57600080fd5b506101df604051806040016040528060058152602001640352e302e360dc1b81525081565b3480156102df57600080fd5b506103077f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161011c565b34801561032b57600080fd5b50600054610307906001600160a01b031681565b34801561034b57600080fd5b506102416108a3565b61035c6108d7565b6103658261097e565b61036f8282610991565b5050565b600061037d610a53565b5060008051602061174783398151915290565b60006103ae6103a0600284610a9c565b6001600160d01b0316610af5565b92915050565b60006103cb6000356001600160e01b031916610b26565b60006103de6103d960025490565b610bda565b90506103ec60028585610c0e565b50507f8c7e5cc1d8e319b08a19c2d91194706fde5294e6181e0ab29669059f976eddc684610422856001600160d01b0316610af5565b6040805165ffffffffffff909316835260208301919091526001600160501b0384169082015260600160405180910390a19392505050565b60018054610467906113b1565b80601f0160208091040260200160405190810160405280929190818152602001828054610493906113b1565b80156104e05780601f106104b5576101008083540402835291602001916104e0565b820191906000526020600020905b8154815290600101906020018083116104c357829003601f168201915b505050505081565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff1660008115801561052e5750825b905060008267ffffffffffffffff16600114801561054b5750303b155b905081158015610559575080155b156105775760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156105a157845460ff60401b1916600160401b1785555b600080546001600160a01b038b166001600160a81b03199091168117600160a01b60ff8c1602178255604080516395d89b4160e01b8152905191926395d89b41926004808401938290030181865afa158015610601573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261062991908101906113eb565b878760405160200161063d93929190611459565b6040516020818303038152906040526001908161065a91906114e0565b5083156106a157845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b60006106bb6103a06002610c29565b905090565b60008060008060006106d160025490565b866001600160501b03161061072d5760405162461bcd60e51b815260206004820152601960248201527f4e6f20636865636b706f696e7420666f7220726f756e6449640000000000000060448201526064015b60405180910390fd5b60006002600001876001600160501b03168154811061074e5761074e6115a0565b60009182526020918290206040805180820190915291015465ffffffffffff81168252600160301b90046001600160d01b03169181018290529150879061079490610af5565b91519098919765ffffffffffff90911696508695509350915050565b6040805160008152602081019091526060908267ffffffffffffffff8111156107db576107db61103b565b60405190808252806020026020018201604052801561080e57816020015b60608152602001906001900390816107f95790505b50915060005b8381101561089b5761086b30868684818110610832576108326115a0565b905060200281019061084491906115df565b856040516020016108579392919061162d565b604051602081830303815290604052610c63565b83828151811061087d5761087d6115a0565b6020026020010181905250808061089390611654565b915050610814565b505092915050565b60008060008060006108c660016108bc6103d960025490565b61023c919061166d565b945094509450945094509091929394565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061095e57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610952600080516020611747833981519152546001600160a01b031690565b6001600160a01b031614155b1561097c5760405163703e46dd60e11b815260040160405180910390fd5b565b61098e63278f794360e11b610b26565b50565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156109eb575060408051601f3d908101601f191682019092526109e89181019061168d565b60015b610a1357604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610724565b6000805160206117478339815191528114610a4457604051632a87526960e21b815260048101829052602401610724565b610a4e8383610cd0565b505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461097c5760405163703e46dd60e11b815260040160405180910390fd5b815460009081610aae85858385610d26565b90508015610ae957610ad385610ac56001846115cc565b600091825260209091200190565b54600160301b90046001600160d01b0316610aec565b60005b95945050505050565b60006001600160ff1b03821115610b225760405163123baf0360e11b815260048101839052602401610724565b5090565b60405163b700961360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063b700961390610b76903390309086906004016116a6565b602060405180830381865afa158015610b93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb791906116d3565b61098e5733308260405163cce79e7960e01b8152600401610724939291906116a6565b60006001600160501b03821115610b22576040516306dfcc6560e41b81526050600482015260248101839052604401610724565b600080610c1c858585610d88565b915091505b935093915050565b80546000908015610c5957610c4383610ac56001846115cc565b54600160301b90046001600160d01b0316610c5c565b60005b9392505050565b6060600080846001600160a01b031684604051610c8091906116f5565b600060405180830381855af49150503d8060008114610cbb576040519150601f19603f3d011682016040523d82523d6000602084013e610cc0565b606091505b5091509150610aec858383610f02565b610cd982610f5e565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115610d1e57610a4e8282610c63565b61036f610fc3565b60005b81831015610d80576000610d3d8484610fe2565b60008781526020902090915065ffffffffffff86169082015465ffffffffffff161115610d6c57809250610d7a565b610d77816001611711565b93505b50610d29565b509392505050565b825460009081908015610ea7576000610da687610ac56001856115cc565b60408051808201909152905465ffffffffffff808216808452600160301b9092046001600160d01b031660208401529192509087161015610dfa57604051632520601d60e01b815260040160405180910390fd5b805165ffffffffffff808816911603610e465784610e1d88610ac56001866115cc565b80546001600160d01b0392909216600160301b0265ffffffffffff909216919091179055610e97565b6040805180820190915265ffffffffffff80881682526001600160d01b0380881660208085019182528b54600181018d5560008d81529190912094519151909216600160301b029216919091179101555b602001519250839150610c219050565b50506040805180820190915265ffffffffffff80851682526001600160d01b0380851660208085019182528854600181018a5560008a815291822095519251909316600160301b029190931617920191909155905081610c21565b606082610f1757610f1282610ffd565b610c5c565b8151158015610f2e57506001600160a01b0384163b155b15610f5757604051639996b31560e01b81526001600160a01b0385166004820152602401610724565b5092915050565b806001600160a01b03163b600003610f9457604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610724565b60008051602061174783398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b341561097c5760405163b398979f60e01b815260040160405180910390fd5b6000610ff16002848418611724565b610c5c90848416611711565b80511561100d5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6001600160a01b038116811461098e57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561107a5761107a61103b565b604052919050565b600067ffffffffffffffff82111561109c5761109c61103b565b50601f01601f191660200190565b600080604083850312156110bd57600080fd5b82356110c881611026565b9150602083013567ffffffffffffffff8111156110e457600080fd5b8301601f810185136110f557600080fd5b803561110861110382611082565b611051565b81815286602083850101111561111d57600080fd5b816020840160208301376000602083830101528093505050509250929050565b803565ffffffffffff8116811461115357600080fd5b919050565b60006020828403121561116a57600080fd5b610c5c8261113d565b6000806040838503121561118657600080fd5b61118f8361113d565b915060208301356001600160d01b03811681146111ab57600080fd5b809150509250929050565b60005b838110156111d15781810151838201526020016111b9565b50506000910152565b600081518084526111f28160208601602086016111b6565b601f01601f19169290920160200192915050565b602081526000610c5c60208301846111da565b6000806000806060858703121561122f57600080fd5b843561123a81611026565b9350602085013560ff8116811461125057600080fd5b9250604085013567ffffffffffffffff8082111561126d57600080fd5b818701915087601f83011261128157600080fd5b81358181111561129057600080fd5b8860208285010111156112a257600080fd5b95989497505060200194505050565b6000602082840312156112c357600080fd5b81356001600160501b0381168114610c5c57600080fd5b600080602083850312156112ed57600080fd5b823567ffffffffffffffff8082111561130557600080fd5b818501915085601f83011261131957600080fd5b81358181111561132857600080fd5b8660208260051b850101111561133d57600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156113a457603f198886030184526113928583516111da565b94509285019290850190600101611376565b5092979650505050505050565b600181811c908216806113c557607f821691505b6020821081036113e557634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156113fd57600080fd5b815167ffffffffffffffff81111561141457600080fd5b8201601f8101841361142557600080fd5b805161143361110382611082565b81815285602083850101111561144857600080fd5b610aec8260208301602086016111b6565b6000845161146b8184602089016111b6565b6201017960ed1b908301908152838560038301376000930160030192835250909392505050565b601f821115610a4e57600081815260208120601f850160051c810160208610156114b95750805b601f850160051c820191505b818110156114d8578281556001016114c5565b505050505050565b815167ffffffffffffffff8111156114fa576114fa61103b565b61150e8161150884546113b1565b84611492565b602080601f831160018114611543576000841561152b5750858301515b600019600386901b1c1916600185901b1785556114d8565b600085815260208120601f198616915b8281101561157257888601518255948401946001909101908401611553565b50858210156115905787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156103ae576103ae6115b6565b6000808335601e198436030181126115f657600080fd5b83018035915067ffffffffffffffff82111561161157600080fd5b60200191503681900382131561162657600080fd5b9250929050565b82848237600083820160008152835161164a8183602088016111b6565b0195945050505050565b600060018201611666576116666115b6565b5060010190565b6001600160501b03828116828216039080821115610f5757610f576115b6565b60006020828403121561169f57600080fd5b5051919050565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b6000602082840312156116e557600080fd5b81518015158114610c5c57600080fd5b600082516117078184602087016111b6565b9190910192915050565b808201808211156103ae576103ae6115b6565b60008261174157634e487b7160e01b600052601260045260246000fd5b50049056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca264697066735822122097842dd646beb34f4ea2035d4acebaf59db60052eac5d5d562066defd99f9c1664736f6c63430008150033";

type OracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Oracle__factory extends ContractFactory {
  constructor(...args: OracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _authority: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_authority, overrides || {});
  }
  override deploy(
    _authority: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_authority, overrides || {}) as Promise<
      Oracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Oracle__factory {
    return super.connect(runner) as Oracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleInterface {
    return new Interface(_abi) as OracleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Oracle {
    return new Contract(address, _abi, runner) as unknown as Oracle;
  }
}
